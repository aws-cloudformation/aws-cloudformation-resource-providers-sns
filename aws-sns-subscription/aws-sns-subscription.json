{
    "typeName": "AWS::SNS::Subscription",
    "description": "An example resource schema demonstrating some basic constructs and validation rules.",
    "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
    "properties": {
        "SubscriptionArn": {
            "type": "string"
        },
        "DeliveryPolicy": {
            "description": "The delivery policy JSON assigned to the subscription. Enables the subscriber to define the message delivery retry strategy in the case of an HTTP/S endpoint subscribed to the topic.",
            "type": "object"
        },
        "Endpoint": {
            "description": "The subscription's endpoint. The endpoint value depends on the protocol that you specify.",
            "type": "string"
        },
        "Owner": {
            "description": "The AWS account ID of the subscription's owner.",
            "type": "string"
        },
        "Protocol": {
            "description": "The subscription's protocol. For more information, see the Protocol parameter of the Subscribe action in the Amazon Simple Notification Service API Reference.",
            "type": "string",
            "examples": ["http","https","email","email-json","sms","sqs","Endpoint Arn for mobile app and device","lambda"]
         },
        "RawMessageDelivery": {
            "description": "When set to true, enables raw message delivery. Raw messages don't contain any JSON formatting and can be sent to Amazon SQS and HTTP/S endpoints.",
            "type": "boolean"
        },
        "Region": {
            "description": "For cross-region subscriptions, the region in which the topic resides. If no region is specified, CloudFormation uses the region of the caller as the default.",
            "type": "string"
        },
        "TopicArn": {
            "description": "The ARN of the topic to subscribe to.",
            "type": "string"
        },
        "FilterPolicy": {
            "description": "The filter policy JSON assigned to the subscription. Enables the subscriber to filter out unwanted messages.",
            "type": "object"
        },
        "RedrivePolicy": {
            "description": "When specified, sends undeliverable messages to the specified Amazon SQS dead-letter queue. Messages that can't be delivered due to client errors (for example, when the subscribed endpoint is unreachable) or server errors (for example, when the service that powers the subscribed endpoint becomes unavailable) are held in the dead-letter queue for further analysis or reprocessing.",
            "type": "object"
        }
    },
    "additionalProperties": false,
    "required": [
        "Protocol",
        "TopicArn"
    ],
    "createOnlyProperties": [
        "/properties/Protocol",
        "/properties/TopicArn"
    ],
    "primaryIdentifier": [
        "/properties/SubscriptionArn"
    ],
    "readOnlyProperties": [
        "/properties/SubscriptionArn"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "sns:Subscribe",
                "sns:GetSubscriptionAttributes",
                "sns:GetTopicAttributes"
            ]
        },
        "read": {
            "permissions": [
                "sns:GetSubscriptionAttributes",
                "sns:GetTopicAttributes"
            ]
        },
        "update": {
            "permissions": [
                "sns:SetSubscriptionAttributes",
                "sns:GetSubscriptionAttributes",
                "sns:GetTopicAttributes"
            ]
        },
        "delete": {
            "permissions": [
                "sns:GetSubscriptionAttributes",
                "sns:GetTopicAttributes",
                "sns:Unsubscribe"
            ]
        },
        "list": {
            "permissions": [
                "sns:GetTopicAttributes",
                "sns:ListSubscriptionsByTopic"
            ]
        }
    }
}
